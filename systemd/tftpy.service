#
# This is an *example* systemd file. It allows the service to bind the standard
# TFTP port (UDP/69) without running as root using the systemd support for Linux
# capabilities (`man getcap`, `man setcap`)
#
# To use, you'll need to (potentially) change the following variables to fit your
# system:
#
# - User
# - Group
# - WorkingDirectory
# - ExecStart
#
# You can then place it under /etc/systemd/system/, or follow your systems pattern
# and place the file in, e.g. /lib/systemd/system/ and use a symlink in the
# /etc/systemd/system directory. After that, you can use the following:
#
# $ sudo systemctl daemon-reload  # Instruct sytemd to refresh its service metadata
# $ sudo systemctl start tftpy  # Start the service immediately
# $ sudo systemctl enable tftp  # Enable the service to start at boot time
#
# This file is pretty self-explanatory. Be aware that if the python executable is
# writable by a user, that user will be able to inherit the CAP_NET_BIND_SERVICE
# capability when this service starts, which allows them to bind arbitrary privileged
# ports. This is in most cases a negligible risk, but should be understood
#
[Unit]
Description=tftpy
After=network.target

[Service]
Type=simple
User=tftp
Group=tftp
WorkingDirectory=/home/tftp/
ExecStart=/home/tftp/venv/bin/python /home/tftp/venv/bin/tftpy_server.py -r /home/tftp/tftproot
Restart=on-abort
AmbientCapabilities=CAP_NET_BIND_SERVICE

[Install]
WantedBy=multi-user.target
